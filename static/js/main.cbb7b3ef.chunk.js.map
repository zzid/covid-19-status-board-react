{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","components/Chart/Chart.module.css","App.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","a","axios","get","console","log","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","CountryPicker","App","state","fetchedData","this","setState","React","Component","ReactDOM","render","document","getElementById"],"mappings":"0GACAA,EAAOC,QAAU,CAAC,UAAY,yBAAyB,KAAO,oBAAoB,SAAW,wBAAwB,UAAY,yBAAyB,OAAS,wB,4NCsDpJC,EAhDD,SAAC,GAA0D,IAAD,IAAvDC,KAAQC,EAA+C,EAA/CA,UAAWC,EAAoC,EAApCA,UAAWC,EAAyB,EAAzBA,OAAQC,EAAiB,EAAjBA,WAEnD,OAAIH,EAIA,yBAAKI,UAAaC,IAAOC,WACrB,kBAACC,EAAA,EAAD,CAAMD,WAAS,EAACE,QAAS,EAAGC,QAAU,UAClC,kBAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,UAAYC,IAAOC,GAAI,GAAIC,GAAI,EAAGV,UAAYW,IAAIV,IAAOW,KAAMX,IAAOY,WAC7E,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,cAAY,GAA9C,aACA,kBAACF,EAAA,EAAD,CAAYG,QAAQ,MAChB,kBAAC,IAAD,CACIC,MAAO,EACPC,IAAMxB,EAAUyB,MAChBC,SAAW,IACXC,UAAU,OAGlB,kBAACR,EAAA,EAAD,CAAYC,MAAM,iBAAiB,IAAIQ,KAAKzB,GAAY0B,gBACxD,kBAACV,EAAA,EAAD,CAAYG,QAAU,SAAtB,yCAGR,kBAACf,EAAA,EAAD,CAAMG,MAAI,EAACC,UAAWC,IAAMC,GAAI,GAAIC,GAAI,EAAGV,UAAYW,IAAIV,IAAOW,KAAMX,IAAOJ,YAC3E,kBAACiB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,cAAY,GAA9C,cACA,kBAACF,EAAA,EAAD,CAAYG,QAAQ,MACpB,kBAAC,IAAD,CAASC,MAAO,EAAGC,IAAMvB,EAAUwB,MAAOC,SAAW,IAAKC,UAAU,OAEpE,kBAACR,EAAA,EAAD,CAAYC,MAAM,iBAAiB,IAAIQ,KAAKzB,GAAY0B,gBACxD,kBAACV,EAAA,EAAD,CAAYG,QAAU,SAAtB,wCAGR,kBAACf,EAAA,EAAD,CAAMG,MAAI,EAACC,UAAWC,IAAMC,GAAI,GAAIC,GAAI,EAAGV,UAAYW,IAAIV,IAAOW,KAAMX,IAAOH,SAC3E,kBAACgB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,cAAY,GAA9C,WACA,kBAACF,EAAA,EAAD,CAAYG,QAAQ,MAChB,kBAAC,IAAD,CAASC,MAAO,EAAGC,IAAMtB,EAAOuB,MAAOC,SAAW,IAAKC,UAAU,OAErE,kBAACR,EAAA,EAAD,CAAYC,MAAM,iBAAiB,IAAIQ,KAAKzB,GAAY0B,gBACxD,kBAACV,EAAA,EAAD,CAAYG,QAAU,SAAtB,8CArCT,c,yBCRTQ,EAAK,iCAIEC,EAAS,uCAAG,sCAAAC,EAAA,+EAOLC,IAAMC,IAAIJ,GAPL,2BAET/B,KACJC,EAHa,EAGbA,UACAC,EAJa,EAIbA,UACAC,EALa,EAKbA,OACAC,EANa,EAMbA,WANa,kBASV,CACHH,YACAC,YACAC,SACAC,eAba,kCAiBjBgC,QAAQC,IAAR,MAjBiB,0DAAH,qDAsBTC,EAAc,uCAAG,gCAAAL,EAAA,+EAECC,IAAMC,IAAN,UAAaJ,EAAb,WAFD,uBAEd/B,EAFc,EAEdA,KAEFuC,EAAevC,EAAKwC,KAAI,SAACC,GAAD,MAAgB,CAC1CxC,UAAYwC,EAAUxC,UAAUyC,MAChCvC,OAASsC,EAAUtC,OAAOuC,MAC1BC,KAAOF,EAAUG,eAPC,kBAUfL,GAVe,gCAYtBH,QAAQC,IAAR,MAZsB,yDAAH,qD,yBCuBZQ,EA7CD,WAAI,MAKoBC,mBAAS,IAL7B,mBAKPL,EALO,KAKIM,EALJ,KAOdC,qBAAU,YACQ,uCAAG,sBAAAf,EAAA,kEACbc,EADa,SACMT,IADN,6EAAH,qDAIdW,MAIJ,IAAMC,EACFT,EAAUU,OAEN,kBAAC,IAAD,CACAnD,KAAO,CACHoD,OAASX,EAAUD,KAAI,qBAAGG,QAC1BU,SAAS,CAAE,CACPrD,KAAOyC,EAAUD,KAAI,qBAAGvC,aACxBqD,MAAQ,WACRC,YAAc,UACdC,MAAO,GACR,CACCxD,KAAOyC,EAAUD,KAAI,qBAAGvC,aACxBqD,MAAQ,SACRC,YAAc,MACdE,gBAAkB,uBAClBD,MAAO,OAGb,KAGV,OACI,yBAAKnD,UAAcC,IAAOC,WACpB2C,ICtCCQ,EANO,WAClB,OACI,8C,iBCkCOC,E,4MA7BXC,MAAO,CACH5D,KAAM,I,kMAWoBgC,I,OAApB6B,E,OAENC,KAAKC,SAAS,CAAC/D,KAAM6D,I,qIAEhB,IACG7D,EAAS8D,KAAKF,MAAd5D,KACR,OAEI,yBAAKK,UAAYC,IAAOC,WACpB,kBAAC,EAAD,CAAOP,KAASA,IAChB,kBAAC,EAAD,MACA,kBAAC,EAAD,W,GAzBEgE,IAAMC,WCDxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U,mBCLjDxE,EAAOC,QAAU,CAAC,UAAY,2B,mBCA9BD,EAAOC,QAAU,CAAC,UAAY,uBAAuB,MAAQ,qB","file":"static/js/main.cbb7b3ef.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"card\":\"Cards_card__eGUfZ\",\"infected\":\"Cards_infected__-adYp\",\"recovered\":\"Cards_recovered__1aizD\",\"deaths\":\"Cards_deaths__Qdjzq\"};","import React from 'react';\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\nimport CountUp from 'react-countup'; // number count up\nimport cx from 'classnames'; // can make having multiple classes in classNamae\n\nimport styles from './Cards.module.css';\n\nconst Cards = ({ data : {confirmed, recovered, deaths, lastUpdate } })=>{\n    // console.log(confirmed)\n    if(!confirmed){\n        return 'Loading...';\n    }\n    return(\n        <div className = {styles.container}>\n            <Grid container spacing={3} justify = \"center\">\n                <Grid item component={ Card } xs={12} md={3} className={ cx( styles.card, styles.infected ) }>\n                    <CardContent>\n                        <Typography color=\"textSecondary\" gutterBottom>Infected </Typography>\n                        <Typography variant=\"h5\">\n                            <CountUp \n                                start={0}\n                                end ={confirmed.value}\n                                duration ={2.5}\n                                separator=\",\"\n                            />\n                        </Typography>\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n                        <Typography variant = \"body2\">Number of active casses of COVID-19</Typography>\n                    </CardContent>\n                </Grid>\n                <Grid item component={Card} xs={12} md={3} className={ cx( styles.card, styles.recovered ) }>\n                    <CardContent>\n                        <Typography color=\"textSecondary\" gutterBottom>Recovered </Typography>\n                        <Typography variant=\"h5\" >\n                        <CountUp start={0} end ={recovered.value} duration ={2.5} separator=\",\"/>\n                        </Typography>\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n                        <Typography variant = \"body2\">Number of recovereis from COVID-19</Typography>\n                    </CardContent>\n                </Grid>\n                <Grid item component={Card} xs={12} md={3} className={ cx( styles.card, styles.deaths ) }>\n                    <CardContent>\n                        <Typography color=\"textSecondary\" gutterBottom>Deaths </Typography>\n                        <Typography variant=\"h5\" >\n                            <CountUp start={0} end ={deaths.value} duration ={2.5} separator=\",\"/>\n                        </Typography>\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n                        <Typography variant = \"body2\">Number of deaths of caused by COVID-19</Typography>\n                    </CardContent>\n                </Grid>\n            </Grid>\n        </div>\n    )\n}\n\nexport default Cards;","import axios from 'axios';\n\nconst url ='https://covid19.mathdro.id/api' // api\n\n\n// async\nexport const fetchData = async ()=>{ // export\n    try{\n        const { data : {\n            confirmed,\n            recovered,\n            deaths,\n            lastUpdate\n        } } = await axios.get(url); // get(url)\n        // same name with above data >> auto \n        return {\n            confirmed,\n            recovered,\n            deaths,\n            lastUpdate\n        };\n\n    }catch(error){\n        console.log(error);\n    }\n}\n\n\nexport const fetchDailyData = async() =>{\n    try{\n        const { data } = await axios.get(`${url}/daily`); // this is not ' , it ` (next to the 1 on keyboard)\n\n        const modifiedData = data.map((dailyData) => ({\n            confirmed : dailyData.confirmed.total,\n            deaths : dailyData.deaths.total,\n            date : dailyData.reportDate,\n        }))\n        // console.log(modifiedData)\n        return modifiedData;\n    }catch(error){\n        console.log(error)\n    }\n}\n","import React, { useState, useEffect } from 'react';\nimport { fetchDailyData } from '../../api';\nimport { Line, Bar } from 'react-chartjs-2';\n\nimport styles from './Chart.module.css';\n\nconst Chart = ()=>{\n    // state ={\n    //     dailyData:{}\n    // }\n    // same with below\n    const [dailyData, setDailyData] = useState([]);\n\n    useEffect(()=>{\n        const fetchAPI = async ()=>{\n            setDailyData(await fetchDailyData());\n        }\n        // console.log(dailyData)\n        fetchAPI();\n    });\n    \n    \n    const lineChart = (\n        dailyData.length\n            ? (\n            <Line\n            data ={{\n                labels : dailyData.map(({ date }) => date),\n                datasets:[ {\n                    data : dailyData.map(({ confirmed }) => confirmed),\n                    label : 'Infected',\n                    borderColor : '#3333ff',\n                    fill : true,\n                }, {\n                    data : dailyData.map(({ confirmed }) => confirmed),\n                    label : 'deaths',\n                    borderColor : 'red',\n                    backgroundColor : 'rgba(255, 0, 0, 0.5)',\n                    fill : true,\n                }],\n            }}\n        />) : null\n    );\n\n    return(\n        <div className = { styles.container }>\n            { lineChart }\n        </div>\n    )\n}\n\nexport default Chart;","import React from 'react';\n\nconst CountryPicker = ()=>{\n    return(\n        <h1>CountryPicker</h1>\n    )\n}\n\nexport default CountryPicker;","import React from 'react';\n\nimport { Cards, Chart, CountryPicker } from './components'\nimport styles from './App.module.css';\n\nimport { fetchData } from './api'; // index file is automactically added even if it's not specified\n\nclass App extends React.Component{\n    //constructor is not necessary\n    state ={\n        data :{},\n    }\n    async componentDidMount(){ // async componenetDidMount() >> is special built in grammer\n        /*\n        const data = await fetchData();\n        this.setState({data})\n\n            >> this is same with below. \n            normarlly {data : data} like this. but can be use like {data} \n            since it has same name, react can recognize\n        */\n        const fetchedData = await fetchData(); // this is from import fetchData\n        // console.log(fetchedData)\n        this.setState({data: fetchedData})\n    }\n    render(){\n        const { data } = this.state; // this is better way\n        return(\n            // don't have any interappearence\n            <div className={ styles.container } > \n                <Cards data = { data }/>\n                <CountryPicker />\n                <Chart />\n            </div>\n        )\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1PIOn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"image\":\"App_image__3byI1\"};"],"sourceRoot":""}