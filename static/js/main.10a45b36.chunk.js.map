{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/image.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","console","log","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","dispaly","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","this","image","src","coronaImg","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.10a45b36.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"card\":\"Cards_card__eGUfZ\",\"infected\":\"Cards_infected__-adYp\",\"recovered\":\"Cards_recovered__1aizD\",\"deaths\":\"Cards_deaths__Qdjzq\"};","import React from 'react';\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\nimport CountUp from 'react-countup'; // number count up\nimport cx from 'classnames'; // can make having multiple classes in classNamae\n\nimport styles from './Cards.module.css';\n\nconst Cards = ({ data : {confirmed, recovered, deaths, lastUpdate } })=>{\n    // console.log(confirmed)\n    if(!confirmed){\n        return 'Loading...';\n    }\n    return(\n        <div className = {styles.container}>\n            <Grid container spacing={3} justify = \"center\">\n                <Grid item component={ Card } xs={12} md={3} className={ cx( styles.card, styles.infected ) }>\n                    <CardContent>\n                        <Typography color=\"textSecondary\" gutterBottom>Infected </Typography>\n                        <Typography variant=\"h5\">\n                            <CountUp \n                                start={0}\n                                end ={confirmed.value}\n                                duration ={2.5}\n                                separator=\",\"\n                            />\n                        </Typography>\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n                        <Typography variant = \"body2\">Number of active casses of COVID-19</Typography>\n                    </CardContent>\n                </Grid>\n                <Grid item component={Card} xs={12} md={3} className={ cx( styles.card, styles.recovered ) }>\n                    <CardContent>\n                        <Typography color=\"textSecondary\" gutterBottom>Recovered </Typography>\n                        <Typography variant=\"h5\" >\n                        <CountUp \n                            start={0} \n                            end ={recovered.value} \n                            duration ={2.5} \n                            separator=\",\"\n                            />\n                        </Typography>\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n                        <Typography variant = \"body2\">Number of recoveries from COVID-19</Typography>\n                    </CardContent>\n                </Grid>\n                <Grid item component={Card} xs={12} md={3} className={ cx( styles.card, styles.deaths ) }>\n                    <CardContent>\n                        <Typography color=\"textSecondary\" gutterBottom>Deaths </Typography>\n                        <Typography variant=\"h5\" >\n                            <CountUp \n                                start={0} \n                                end ={deaths.value} \n                                duration ={2.5} \n                                separator=\",\"\n                                />\n                        </Typography>\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n                        <Typography variant = \"body2\">Number of deaths of caused by COVID-19</Typography>\n                    </CardContent>\n                </Grid>\n            </Grid>\n        </div>\n    )\n}\n\nexport default Cards;","import axios from 'axios';\n\nconst url ='https://covid19.mathdro.id/api' // api\n\n\n// async\nexport const fetchData = async (country)=>{ // export\n    let changeableUrl = url;\n\n    if(country) {\n        changeableUrl = `${url}/countries/${country}`;\n    }\n\n    try{\n        const { data : {\n            confirmed, recovered, deaths, lastUpdate\n        } } = await axios.get(changeableUrl); // get(url)\n        // same name with above data >> auto \n        return {\n            confirmed, recovered, deaths, lastUpdate\n        };\n\n    }catch(error){\n        console.log(error);\n    }\n}\n\n\nexport const fetchDailyData = async() =>{\n    try{\n        const { data } = await axios.get(`${url}/daily`); // this is not ' , it ` (next to the 1 on keyboard)\n\n        const modifiedData = data.map((dailyData) => ({\n            confirmed : dailyData.confirmed.total,\n            deaths : dailyData.deaths.total,\n            date : dailyData.reportDate,\n        }))\n        // console.log(modifiedData)\n        return modifiedData;\n    }catch(error){\n        console.log(error)\n    }\n}\n\n\nexport const fetchCountries = async () => {\n    try{\n        const { data : {countries}} = await axios.get(`${url}/countries`);\n        return countries.map((country)=> country.name);\n    } catch(error){\n        console.log(error);\n    }\n}","import React, { useState, useEffect } from 'react';\nimport { fetchDailyData } from '../../api';\nimport { Line, Bar } from 'react-chartjs-2';\n\nimport styles from './Chart.module.css';\n\nconst Chart = ({data : {confirmed, deaths, recovered}, country})=>{\n    // state ={\n    //     dailyData:{}\n    // }\n    // same with below\n    const [dailyData, setDailyData] = useState([]);\n\n    useEffect(()=>{\n        const fetchAPI = async ()=>{\n            setDailyData(await fetchDailyData());\n        }\n        // console.log(dailyData)\n        fetchAPI();\n    },[]);\n    \n    \n    const lineChart = (\n        dailyData.length\n            ? (\n            <Line\n            data ={{\n                labels : dailyData.map(({ date }) => date),\n                datasets:[ {\n                    data : dailyData.map(({ confirmed }) => confirmed),\n                    label : 'Infected',\n                    borderColor : '#3333ff',\n                    fill : true,\n                }, {\n                    data : dailyData.map(({ deaths }) => deaths),\n                    label : 'deaths',\n                    borderColor : 'red',\n                    backgroundColor : 'rgba(255, 0, 0, 0.5)',\n                    fill : true,\n                }],\n            }}\n        />) : null\n    );\n\n\n    const barChart = (\n        confirmed\n            ?(\n                <Bar\n                    data = {{\n                      labels:['Infected', 'Recovered', 'Deaths'],\n                      datasets:[{\n                        label :'People',\n                        backgroundColor:[\n                            'rgba(0,0,255, 0.5)',\n                            'rgba(0,255,0, 0.5)',\n                            'rgba(255,0,0, 0.5)'\n                        ],\n                        data:[confirmed.value, recovered.value, deaths.value]\n                      }]\n                    }}\n                    options ={{\n                        legend : { display :false },\n                        title : { dispaly : true, text:`Current state in ${country}`}\n                    }}\n                />\n            ) : null\n    )\n    return(\n        <div className = { styles.container }>\n            { country ? barChart : lineChart }\n        </div>\n    )\n}\n\nexport default Chart;","import React, { useEffect, useState } from 'react';\nimport { NativeSelect, FormControl } from '@material-ui/core';\n\nimport styles from './CountryPicker.module.css';\n\nimport { fetchCountries } from '../../api';\n\nconst CountryPicker = ({ handleCountryChange })=>{\n    const [fetchedCountries, setFetchedCountries] = useState([]);\n\n    useEffect(()=>{\n        const fetchAPI = async () =>{\n            setFetchedCountries(await fetchCountries());\n        }\n\n        fetchAPI();\n    }, [setFetchedCountries]);\n\n    return(\n        <FormControl className={styles.formControl}>\n            <NativeSelect defaultValue='' onChange={(e)=>handleCountryChange(e.target.value)}>\n                <option value=\"\">Global</option>\n                {fetchedCountries.map((country, i) => <option key={i} value={country}>{country}</option>)}\n            </NativeSelect>\n        </FormControl>\n\n    )\n}\n\nexport default CountryPicker;","import React from 'react';\n\nimport { Cards, Chart, CountryPicker } from './components'\nimport styles from './App.module.css';\n\nimport { fetchData } from './api'; // index file is automactically added even if it's not specified\n\nimport coronaImg from './images/image.png'\n\nclass App extends React.Component{\n    //constructor is not necessary\n    state ={\n        data :{},\n        country :'',\n    }\n    async componentDidMount(){ // async componenetDidMount() >> is special built in grammer\n        /*\n        const data = await fetchData();\n        this.setState({data})\n\n            >> this is same with below. \n            normarlly {data : data} like this. but can be use like {data} \n            since it has same name, react can recognize\n        */\n        const fetchedData = await fetchData(); // this is from import fetchData\n        // console.log(fetchedData)\n        this.setState({data: fetchedData})\n    }\n\n    handleCountryChange = async (country) =>{\n        const fetchedData = await fetchData(country);\n        this.setState({ data : fetchedData, country : country })\n        //fetch the data\n        //set the state\n    }\n\n    render(){\n        const { data, country } = this.state; // this is better way\n        return(\n            // don't have any interappearence\n            <div className={ styles.container } > \n                <img className={styles.image} src={coronaImg}></img>\n                <Cards data = { data }/>\n                <CountryPicker handleCountryChange = {this.handleCountryChange}/>\n                <Chart data = { data } country = {country} />\n            </div>\n        )\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"image\":\"App_image__3byI1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1PIOn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2p8f9\",\"container\":\"CountryPicker_container__2vyxG\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}